apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    tier: backend
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      tier: backend
  template:
    metadata:
      labels:
        app: nginx
        tier: backend
    spec:
      volumes:
      - name: depl-nfs
        persistentVolumeClaim:
          claimName: pvc-nfs
      - name: config
        configMap:
          name: nginx-config
          items:
          - key: config
            path: site.conf
      securityContext: #accessPermission_on_mountVolume
          runAsUser: 0 #command:id
          runAsGroup: 82 #command:cat /etc/passwd
          fsGroup: 82 #command:stat storage 82(www-data)
          fsGroupChangePolicy: "OnRootMismatch"
      containers:
      - name: nginx
        image: nginx:stable-alpine
        securityContext:
            capabilities:
              add: ["SYS_ADMIN"]
        resources:
          limits:
            cpu: "100m"
            memory: "100Mi"
        volumeMounts:
        - name: depl-nfs
          mountPath: /code
        - name: config
          mountPath: /etc/nginx/conf.d
        ports:
        - containerPort: 80
          name: http
          protocol: TCP

---

kind: Service
apiVersion: v1
metadata:
  name: nginx
  labels:
    tier: backend
    app: nginx
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 32380
  selector:
    tier: backend
    app: nginx
  type: LoadBalancer

  #note:
  #php artisan route:clear
  #php artisan config:clear
  #php artisan cache:clear